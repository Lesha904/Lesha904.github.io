{"version":3,"sources":["components/Create.js","components/Main.js","components/About.js","components/Footer.js","components/Header.js","components/Note.js","components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["Create","useState","formClass","setFormClass","lineClass","setLineClass","url","setUrl","onSubmit","event","preventDefault","note","target","elements","value","trim","alert","obj","myHeaders","Headers","append","urlencoded","URLSearchParams","key","requestOptions","method","headers","body","redirect","fetch","env","urlBackend","then","response","json","console","log","result","sendData","authkey","className","htmlFor","name","id","defaultValue","type","onClick","window","location","reload","Main","href","About","Footer","Header","exact","to","Note","noteURL","useParams","noteText","setNoteText","errorClass","setErrorClass","useEffect","undefined","action","Error","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69941bfb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport env from '../env.json'\r\n\r\nfunction Create() {\r\n\r\n    const [formClass, setFormClass] = useState();\r\n    const [lineClass, setLineClass] = useState('hide');   // скрываем\r\n    const [url, setUrl] = useState('');  \r\n\r\n    let sendData = (obj) => {\r\n        let myHeaders = new Headers();                                          // создаем заголовки  // Интерфейс Headers позволяет вам создать ваш собственный объект заголовков через конструктор Headers() \r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");   // устанавливаем формат\r\n        let urlencoded = new URLSearchParams();                  // добавляем данные в Body   // Конструктор URLSearchParams() создает и возвращает новый объект URLSearchParams.\r\n        for (let key in obj) {                              // obj - это объект с данными переданными в sendData\r\n            urlencoded.append(key, obj[key]);    // Добавляет указанную пару key/value в качестве нового параметра поиска.\r\n        }\r\n        \r\n        const requestOptions = {                                       // формируем параметры запроса\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        setFormClass('hide');\r\n        setLineClass('');\r\n        fetch(                                                         // отправляем fetch\r\n            env.urlBackend,\r\n            requestOptions\r\n        )\r\n        .then( response => response.json())\r\n        .then(response => {\r\n            console.log(response);\r\n            if (response.result) {\r\n                setUrl(env.url+'/'+response.url);\r\n            }\r\n        });\r\n \r\n        \r\n       /*  setFormClass('hide');      // старая версия оформления запроса\r\n        setLineClass('');\r\n        fetch(env.urlBackend, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: JSON.stringify(obj),\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response);\r\n            if (response.result) {\r\n                setUrl(env.url + '/' + response.url);\r\n            }\r\n        }) */\r\n       \r\n   }\r\n\r\n   let loadDataFromForm = (event) => {\r\n        event.preventDefault();\r\n        let note = event.target.elements.note.value;\r\n        note = note.trim();\r\n        if (note === '') {\r\n            alert('Заполнить поля');\r\n            return false;\r\n        }\r\n        sendData({ \r\n            \"note\": note , \r\n            authkey : '744938d92c1484331408715b9bd8adbc870055561054ab42108d4ad005a22650'\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={loadDataFromForm} className={formClass} className=\"main-form\">\r\n                <label htmlFor=\"\" className=\"alert alert-success\">Введите заметку</label>            \r\n                <textarea name=\"note\" id=\"note\" defaultValue='Test' className=\"form-control-lg plus-textarea\"></textarea>\r\n                <button type=\"submit\" className=\"button\">Создать</button>\r\n            </form>\r\n            <div className={lineClass}>\r\n                <div className=\"url\">{url}</div>\r\n                <div><button onClick={function () { window.location.reload() }} className=\"btn btn-info\">Создать еще один note</button></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;","function Main() {\r\n    return (\r\n       <div>\r\n           <div className=\"main-div\">\r\n               <div className=\"block-1\">\r\n                   <a href=\"/create\">Создать note</a>\r\n               </div>\r\n               <div className=\"block-2\">\r\n                   <a href=\"/note\">Просмотреть note</a>\r\n               </div>\r\n           </div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Main;","function About() {\r\n    return (\r\n        <div className=\"text\">\r\n            <p>In expression an solicitude principles in do. He in sportsman household otherwise it perceived instantly. Sportsman do offending supported extremity breakfast by listening. To sure calm much most long me mean. Girl quit if case mr sing as no have. Polite do object at passed it is. Considered discovered ye sentiments proj</p>\r\n\r\n            <p>Took sold add play may none him few. Course sir people worthy horses add entire suffer. Celebrated delightful an especially increasing instrument am. Decisively advantages nor expression unpleasing she led met. Draw fond rank form nor the day eat. Ecstatic elegance gay but disposed. If in so bred at dare rose lose good.</p>\r\n\r\n            <p>Equally he minutes my hastily. Sitting hearted on it without me. Mirth learn it he given. Expression alteration entreaties mrs can terminated estimating. Happiness remainder joy but earnestly for off. At principle perfectly by sweetness do. In expression an solicitude principles in do. Feel and make two real.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","function Footer() {\r\n    return (\r\n        <>\r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { NavLink } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n       <div>\r\n           <nav className=\"row\">      {/* изначально не было класса */}\r\n               {/* <ul className=\"row\"> */}\r\n                 {/*   <li><NavLink exact className=\"\" to=\"/\">Home</NavLink></li>\r\n                   <li><NavLink exact className=\"\" to=\"/note\">Note</NavLink></li>\r\n                   <li><NavLink exact className=\"\" to=\"/create\">Create</NavLink></li>\r\n                   <li><NavLink exact className=\"\" to=\"/about\">About</NavLink></li> */}\r\n               {/* </ul> */}\r\n               <div><NavLink exact className=\"\" to=\"/\">Home</NavLink></div>\r\n               <div><NavLink exact className=\"\" to=\"/note\">Note</NavLink></div>\r\n               <div><NavLink exact className=\"\" to=\"/create\">Create</NavLink></div>\r\n               <div><NavLink exact className=\"\" to=\"/about\">About</NavLink></div>\r\n           </nav>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Header;","// http://localhost:3000/note//ehfw254qge7oqpftu41hbkdr    для примера осталась\r\nimport { useEffect, useState} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport  env from \"../env.json\";\r\n\r\nfunction Note() {        // компонент Note получает данные!!!!!!!!\r\n\r\n    let { noteURL } = useParams();\r\n    const [noteText, setNoteText] = useState('');\r\n    const [formClass, setFormClass] = useState('');\r\n    const [lineClass, setLineClass] = useState('');\r\n    const [errorClass, setErrorClass] = useState('hide');\r\n\r\n    useEffect(() => {\r\n        if (noteURL !== undefined) {            // проверка хэша в url-адресе. И если его нет, то делаю 50 строка\r\n            setFormClass('hide');\r\n            let myHeaders = new Headers();       // создаем заголовки  // Интерфейс Headers позволяет вам создать ваш собственный объект заголовков через конструктор Headers() \r\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");    // устанавливаем формат\r\n            let urlencoded = new URLSearchParams();             // добавляем данные в Body   // Конструктор URLSearchParams() создает и возвращает новый объект URLSearchParams.\r\n            urlencoded.append('authkey', '744938d92c1484331408715b9bd8adbc870055561054ab42108d4ad005a22650');   \r\n            urlencoded.append('url',  noteURL);\r\n                    const requestOptions = {                                       // формируем параметры запроса\r\n                        method: 'POST',\r\n                        headers: myHeaders,\r\n                        body: urlencoded,\r\n                        redirect: 'follow'\r\n                    };\r\n            \r\n                    setFormClass('hide');\r\n                    setLineClass('');\r\n                    fetch(                                                         // отправляем fetch\r\n                        env.urlBackend,\r\n                        requestOptions\r\n                    )\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    console.log(response);\r\n                    if (response.result) {\r\n                        setNoteText(response.note);  //  прописав note в строке setNoteText(response.note) мы тем самым добились получение конкретного элемента результата, а не некий общий результат\r\n                        setLineClass('');\r\n                        setFormClass('hide');\r\n                    }\r\n                    else if (!response.result) {\r\n                        setLineClass('hide');\r\n                        setFormClass('hide');\r\n                        setErrorClass('');\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            setFormClass('');\r\n            setLineClass('hide');\r\n        }\r\n    }, []);\r\n\r\n    function getNote(event) {\r\n        event.preventDefault();\r\n        let url = event.target.elements.url.value;\r\n        url = url.trim();\r\n        if (url === '') {\r\n            alert('Fill fields');\r\n            return false;\r\n        }\r\n        noteURL = url;\r\n        window.location.href = env.url +'/'+ url;\r\n    }\r\n\r\n    function searchNote() {\r\n        window.location.href = env.url;\r\n    }\r\n\r\n    return (\r\n       <div>\r\n            <div className={lineClass} className=\"note\">                          {/* скрываем нужные блоки */}\r\n                <h4>Note:</h4>\r\n                <div className=\"message\">{noteText}</div>\r\n                <div><button onClick={searchNote} className=\"button-3\">Смотреть еще один note</button></div>\r\n            </div>\r\n            <div className={errorClass}>\r\n                <p>Произошла ошибка. Такой хеш/note не найден!</p>\r\n            </div>\r\n            <div className={formClass}>\r\n                <form action=\"\" onSubmit={getNote} className=\"main-form2\">\r\n                    <label htmlFor=\"url\" className=\"alert alert-success\">Введите хэш заметки</label>         {/*  label должен обращаться по id */}\r\n                    <textarea type='text' name=\"url\" id=\"url\" defaultValue='form-control' className=\"form-control-lg plus-textarea\"></textarea>\r\n                    <button type=\"submit\" className=\"button\">Искать Note</button>\r\n                </form>\r\n            </div>\r\n            \r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Note;\r\n\r\n// Вначале нужно разобраться что делает компонент!!!!!!!!!!!!!!\r\n// Note - делает две вещи:\r\n// первая если в адресе-ссылке есть url - то берем этот url и делаем запрос по API\r\n// второй вариант - в адресе нет url мы выводим форму куда пользователь может ввести url, после чего мы берем \r\n// этот URL и делаем запрос по API","function Error() {\r\n    return (\r\n        <>\r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Error;","import { BrowserRouter as Router, Switch, Route, Link, NavLink } from 'react-router-dom';\nimport Create from './components/Create';\nimport Main from './components/Main';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Note from './components/Note';\nimport Error from './components/Error';   // страница не найдена будет\n\nfunction App() {\n  return (\n    <>\n      <div className=\"main\">  {/* приложение */}\n      <Router>\n        <Header></Header>\n            <div className=\"container\">\n            <Switch>   \n             \n              <Route exact path=\"/\" component={Main} />   \n              <Route path=\"/about\" component={About} />\n              <Route path=\"/create\" component={Create} />\n              <Route exact path=\"/note/\" component={Note} />\n              <Route path=\"/note/:noteURL\" component={Note} /> {/* Note может быть с параметрами, и потому создаем параметр :noteURL */}\n              <Route component={Error} />        {/* Сделали роутинг на ошибку */}\n            </Switch>\n          \n           </div>\n      </Router>\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default App;\n\n// Используем роутинг!!! И тогда нужно установить доп. пакеты\n// пакет для осуществления навигации npm i react-dom\n//  и еще npm i react-router-dom\n\n// Если в одном файле прописано несколько \"экспортов\" именованых не по дефолту, то тогда они берутся в {} и перечилсяются\n// так, как мы их хотим именовать. Пример с 1 строкой\n\n// Есть приложение, внутри которого есть Router. Внутри Router будет <Header></Header>. Еще будет Switch. \n// Внутри <Switch> пропишем несколько путей!!!\n// Что такое exact?\n// Указание на компонент который будем загружать--> component={Main}\n\n// После Router подключим  <Footer/>.\n\n// Метод trim() удаляет пробельные символы с начала и конца строки. \n// Метод trim() возвращает строку с вырезанными пробельными символами с её концов. Метод trim() не изменяет значение самой строки.","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}