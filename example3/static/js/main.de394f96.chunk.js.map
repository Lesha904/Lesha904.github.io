{"version":3,"sources":["Comment.js","Comments2ListHook.js","Comment2Hook.js","App.js","reportWebVitals.js","index.js"],"names":["Component","Comments2ListHook","props","useState","data","setData","useEffect","console","log","length","onClick","result","filter","item","index","map","el","email","body","id","Comment2Hook","content","setContent","onChange","event","target","value","fetch","then","response","json","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEsBA,Y,MCkCPC,MAjCf,SAA4BC,GACxB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAPAC,qBAAU,WACNC,QAAQC,IAAI,UACRN,EAAME,KAAKK,OAAS,GACpBJ,EAAQH,EAAME,QAEnB,CAACF,IAGD,gCACK,8BACF,wBAAQQ,QAlBG,WACb,IAGIC,EAHIP,EAGOQ,QAAQ,SAACC,EAAMC,GAAP,OAAiBA,EAAQ,IAAM,KACtDT,EAAQM,IAaN,kCAEAP,EAAKW,KAAI,SAACC,EAAIF,GAAL,OACb,oCACC,4BAAG,8BAAIA,EAAQ,EAAZ,KAAiBE,EAAGC,WACvB,4BAAID,EAAGE,SAFMF,EAAGG,WCORC,MA9Bf,WAEI,MAA8BjB,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KAWA,OACI,gCACI,gDACA,yBAAQC,SAZhB,SAAuBC,GACnBjB,QAAQC,IAAIgB,EAAMC,OAAOC,OAEzBC,MAAM,8CAAgDH,EAAMC,OAAOC,MAAQ,aACtEE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAxB,GACFkB,EAAWlB,OAMf,UACI,wBAAQsB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,kBAEJ,8BAEI,cAAC,EAAD,CAAmBtB,KAAMiB,UCJ1BU,MAbf,WACE,OACE,mCAME,cAAC,EAAD,OCPSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.de394f96.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Comment extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { data: [] };\r\n    }\r\n\r\n    selectHandler = (event) =>{\r\n        console.log(event.target.value);\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts/\"+ event.target.value +\"/comments\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState({ data });\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Choose post ID:</p>\r\n                <select onChange={this.selectHandler}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                </select>\r\n                <div>\r\n                    <h1>Comments</h1>\r\n                    {this.state.data.map((el, index) => (\r\n                        <section key={el.id}>\r\n                            <p><b>{index + 1}. {el.email}</b></p>\r\n                            <p>{el.body}</p>\r\n                        </section>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comment;","import React, { useEffect, useState } from 'react';\r\n\r\n// сюда в скобки добавил props!!!!!!!!!!!!!!!\r\nfunction Comments2ListHook (props){\r\n    const [data, setData] = useState([]); \r\n   \r\n    const onlyEven = () => {\r\n        let a = data;\r\n        // исправил filter\r\n        \r\n        let result = a.filter( (item, index) => index % 2 === 0 );\r\n        setData(result);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('effect');\r\n        if (props.data.length > 0){\r\n            setData(props.data);\r\n        } \r\n    }, [props]);\r\n\r\n    return (\r\n       <div>\r\n            <div>\r\n\t\t        <button onClick={onlyEven}>Only even comments</button>\r\n\t        </div>\r\n\t        {data.map((el, index) => (\r\n\t\t    <section key={el.id}>\r\n\t\t\t    <p><b>{index + 1}. {el.email}</b></p>\r\n\t\t\t    <p>{el.body}</p>\r\n\t\t    </section>\r\n\t        ))}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Comments2ListHook;","import React, { useEffect, useState } from 'react';\r\nimport CommentsListHook from './CommentsListHook';\r\nimport Comments2ListHook from './Comments2ListHook';\r\n\r\nfunction Comment2Hook() {\r\n\r\n    const [content, setContent] = useState([]);\r\n\r\n    function selectHandler(event) {\r\n        console.log(event.target.value);\r\n        // тут подправил запрос !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts/\" + event.target.value + \"/comments\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setContent(data);\r\n            });\r\n    }\r\n    return (\r\n        <div>\r\n            <p>Choose post ID:</p>\r\n            <select onChange={selectHandler}>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n            </select>\r\n            <div>\r\n                {/* <CommentsListHook data={content}/> */}\r\n                <Comments2ListHook data={content} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment2Hook;","import './App.css';\nimport React from 'react';\n// import Button from './Button';\n// import PlaceholderPost from './PlaceholderPost';\nimport Comment from './Comment';\n/* import Comment2 from './Comment2'; */\n// import PlaceholderPostHook from './PlaceholderPostHook';\n// import CommentHook from './CommentHook';\nimport Comment2Hook from './Comment2Hook';\n\n\nfunction App() {\n  return (\n    <>\n      {/* <PlaceholderPost /> */}\n      {/* <Comment/> */}\n      {/* <Comment2/> */}\n      {/* <PlaceholderPostHook /> */}\n      {/* <CommentHook /> */}\n      <Comment2Hook />\n    </>\n  );\n}\n\nexport default App;\n\n// Комментирование дает нам возможность  приостановить работу/ \"выключить\" то, что может мешать нам проверить \n// работает выполняемый нами текущий таск или нет. Просто если не коментить временно не нужные уже сделанные таски,\n// то они могут влиять на работу выполняемого любого текущего таска, который мы пробуем выполнять, и тем самым \n// не дать возможность увидеть результат нашей работы по выполняемому текущему таску.\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}